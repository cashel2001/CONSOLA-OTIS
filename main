
//  1B 5b 2F 37 52 1B 5B 38 01 53 1B 5B 04 0E 54

//TRAMA INTERMEDIA \1xB [ / 7 R \1xB [ 8 \x01 S \1xB [ \x04 \x0E T      ----> en codigo ascii
// TRAMA INTERMEDIA 0x1B 0x5B 0x2F 0x37 0x52 0x1B 0x5B 0x38 0x01 0x53 0x1B 0x5B 0x04 0x0E 0x54   ----> en hexadecimal
// TRAMA INTERMEDIA 27 91 47 55 82 27 91 56 1 83 27 91 4 14 84   ----> en decimal 

#include <CustomSoftwareSerial.h>
#include <Arduino.h>
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>

CustomSoftwareSerial* customSerial;               // Declaro  el puerto serie virtual

LiquidCrystal_I2C lcd( 0x27, 16, 2 ); // direccion de memoria 0x20 para proteus --- 0x27 para lcd fisico

const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns

byte flag = 12;

bool estadoEscritura = false;

byte tramaRX[40];

byte tramaIntermedia[15] = { 0x1B , 0x5b , 0x2F , 0x37 , 0x52 , 0x1B , 0x5B , 0x38 , 0x01 , 0x53 , 0x1B , 0x5B , 0x04 , 0x0E , 0x54};

byte indiceTramaRX = 0;
byte contadorTramaRX = 0;

char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};

byte rowPins[ROWS] = {5, 4, 3, 2}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {9, 8, 7, 6}; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS );

void setup() {
  pinMode(flag, OUTPUT);

  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }
  Serial.begin(9600,SERIAL_8O1);
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.print("    SELF TEST   ");
  lcd.setCursor(0,1);
  lcd.print("-OK- MECS - MODE ");

  customSerial = new CustomSoftwareSerial(10, 11); // rx, tx
  customSerial->begin(9600, CSERIAL_8O1);         // Baud rate: 9600, configuration: CSERIAL_8O1 8 bits, odd parity, 1 bit stop

}

void loop()
 {

  char key = keypad.getKey();
  Serial.println(key);

  if (key=='A'){
      customSerial->write("M");
      lcd.print("A");            // Write testing data
  }

    if (key=='1'){
      customSerial->write("1");  
      lcd.print("1");            // Write testing data
  }

    if (key=='2'){
      customSerial->write("2");  
      lcd.print("2");            // Write testing data
  }

    if (key=='B'){
      customSerial->write("R");
      lcd.print("B");              // Write testing data
  }

  if (customSerial->available() && ( estadoEscritura == false ))
  {

      tramaRX[indiceTramaRX]=customSerial->read();
      

      if ( tramaRX[indiceTramaRX] == tramaIntermedia[indiceTramaRX])
      {
        contadorTramaRX++;
      }
      if ( contadorTramaRX == 14 )
      {
        contadorTramaRX = 0;
        
      } 
      if (( indiceTramaRX == 37 ))
      {
        estadoEscritura = true;
        digitalWrite(flag,HIGH);
        indiceTramaRX = -1 ; 


           lcd.setCursor( 0 , 0 );
            for ( int i = 4; i < 19 ; i++ )
             {
              lcd.write(tramaRX[i]);
               tramaRX[i]=0;
             }

           lcd.setCursor(0 , 1);
           for ( int i = 21; i < 39 ; i++ )
            {
              lcd.write(tramaRX[i]);
              tramaRX[i]=0;
            }
      customSerial->flush();
      }
      estadoEscritura = false;
      digitalWrite(flag,LOW);
      indiceTramaRX++;
  }   
}
